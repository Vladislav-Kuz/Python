дз 3 семинар

# 1 Задайте список из нескольких чисел. Напишите программу,
# которая найдёт сумму элементов списка,
# стоящих на нечётной позиции.


    *Пример:*
    
    - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

from random import randint

a = int(input('Введите кол-во чисел в списке for 1# = '))
list_a = list((i-i+1)*randint(0, 10) for i in range(a))
print(list_a)
sum_a = sum(list_a[i] for i in range(1, a, 2))
print(sum_a)
______________________________
++++++++++++++++++++++++++++++

my_list = [8, 5, 7, 3, 6]
print(sum(my_list[1::2]))



____________________________________
+++++++++++++++++++++++++++++++

lst = [2, 3, 5, 9, 3]

sum = 0
for i in range(len(lst)):
    if i % 2 == 1:
        sum += lst[i]

print(f"Сумма нечетных элементов = {sum}")


____________________________________

def sum_elem_odd_pos():
    try:
        lst = list(map(int, input('Введите числа через запятую: ').split(',')))
    except ValueError:
        print('Некорректный ввод')
        print()
        sum_elem_odd_pos()
    else:
        print(f'Сумма элементов списка, стоящих на нечётной позиции: {sum(lst[1::2])}')


sum_elem_odd_pos()












2. Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
    
    *Пример:*
    
    - [2, 3, 4, 5, 6] => [12, 15, 16];
    - [2, 3, 5, 6] => [12, 15]



def mult_two_num ():
    try:
        lst = list(map(int, input('Введите числа через запятую: ').split(',')))
    except ValueError:
        print('Некорректный ввод')
        print()
        mult_two_num()
    else:
        newlst = []
        for i in range((len(lst) + 1) // 2):
            newlst.append(lst[i] * lst[- 1 - i])
        print(f'Произведение пар чисел списка: {newlst}')


mult_two_num()

______________________________________
+++++++++++++
import random
b = int(input('Введите кол-во чисел в списке for 2# = '))
list_b = list(random.randint(0, 10) for i in range(b))
print(list_b)
proiz_b = list(list_b[i]*list_b[-1*(1+i)] for i in range(b//2+1*(b%2)))
print(proiz_b)



______________________________________________________
++++++++++++++++++++++++
#list = [3, 4, 5, 6]
#result_list = []
#for i in range((len(list)+1)//2):
#    result_list.append(list[i]*list[len(list)-1-i])
#print()
#print(result_list)
#print()





3. Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.
    
    *Пример:*
    
    - [1.1, 1.2, 3.1, 5, 10.01] => 0.19



print('задача 3#')c = [1.3, 1.4, 20.1, 100.9, 3.001]print(c)list_c = list(round(c[i]%1, len(str(c[i]))) for i in range(len(c)))result_3 = max(list_c)-min(list_c)print(f'разница между нецелой частью = {result_3}')

# Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу
# между максимальным и минимальным значением дробной части элементов.
# Пример:
# - [1.1, 1.2, 3.1, 10.01] => 0.19
++++++++++++++++++++++++++++++++++
list = [1.1, 1.2, 3.1, 10.01]
mix_list = []

for i in list:
    mix_list.append(round(i-int(i), 2))

print(list, end=' => ')
print(max(mix_list) - min(mix_list))

______________________________

+++++++++++++++++++++++
print('задача 3#')
c = [1.3, 1.4, 20.1, 100.9, 3.001]
print(c)
list_c = list(round(c[i]%1, 4) for i in range(len(c)))
result_3 = max(list_c)-min(list_c)
print(f'разница между нецелой частью = {result_3}')


___________________________
n = 51.62
num = str(n).split('.')
print(num[0])
print(num[-1])
_______________________________________________
++++++++++++++++
list = [1.1, 1.2, 3.1, 5, 10.01]
min = 1
max = 0
for i in list:
    if (i % 1) <= min:
        min =  i % 1
    if ( i % 1) >= max:
        max = i % 1

print (f"Разница между максимальным и минимальным значением дробной части равна: {(max-min)}")

________________________________________________

# Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.

# Пример:

# - [1.1, 1.2, 3.1, 5, 10.01] => 0.19

from random import uniform


n = int(input('Введите размер списка '))
list1 = []
for i in range(n):
    f = uniform(0, 9)
    list1.append(round(f, 2))

min = list1[0]
max = 0
for i in range(len(list1)):
    
    if max < list1[i]:
        max = list1[i]
    if min > list1[i]:
        min = list1[i]
dif = (max - int(max)) - (min - int(min))

print(list1)
print(max, min)
print(round(dif,2))

_____________________________________________

"""
flist = [1.1, 1.2, 3.1, 5, 10.01]
min_fract = 0.0
max_fract = 0.0
is_first_pass = True
for el in flist:
    x = el - int(el)
    if is_first_pass:
        min_fract = max_fract = x
        is_first_pass = False
    elif x < min_fract:
        min_fract = x
    elif x > max_fract:
        max_fract = x

# print(f"{(max_fract - min_fract):.2f}") - округляет и выводит 0.20 
# print(max_fract - min_fract) - выводит 0.19999999996

print(str(max_fract - min_fract)[:4])
__________________________________

# - [1.1, 1.2, 3.1, 5, 10.01] => 0.19

import random

def make_list() -> list:
    my_list = []
    for i in range(random.randint(5, 10)):
        my_list.append(round((random.randint(1, 10) + random.random()), 3))
    return my_list

def min_max_fraction(my_list: list) -> float:
    for i in range(len(my_list)):
        my_list[i] = my_list[i] % int(my_list[i])
    min_value = 0
    max_value = 0
    for i in range(len(my_list)):
        if my_list[i] > my_list[max_value]:
            max_value = i
        if my_list[i] < my_list[min_value]:
            min_value = i
    result = my_list[max_value] - my_list[min_value]
    return round(result, 3)

my_list = [1.1, 1.2, 3.1, 5.07, 10.01]
second_list = make_list()

print(f'Дан список: {my_list}')
print(f'Разница между max и min значением дробной части равно: {min_max_fraction(my_list)}')

print(f'Дан список: {second_list}')
print(f'Разница между max и min значением дробной части равно: {min_max_fraction(second_list)}')





4. Напишите программу, которая будет преобразовывать десятичное число в двоичное.
    
    *Пример:*
    
    - 45 -> 101101
    - 3 -> 11
    - 2 -> 10

+++++++++++++++++
a=int(input('Введите число = '))
print(bin(a))
____________________________________________
+++++++++++++++++
a = int(input('введите число для перевода = '))
b = ''
while a != 0:
    b = str(a % 2) + b
    a = a // 2
print(b)

________________________________

print(f'Двоичное число через функцию bin: {bin(num10)}')
____________________________________________

value,result = 45,''
print(bin(value))
while True:
    result = str(value % 2) + result
    value //= 2
    if value == 0:
        break
print(result) 



___________________________________________
def int_to_bin(n: int) -> str:
    result = ""
    while (n > 0):
        result += "1" if n % 2 == 1 else "0"
        n //= 2
    return "".join(reversed(result))


if __name__ == "__main__":
    a, b, c = 45, 3, 2
    print(f"{a} -> {int_to_bin(a)}")
    print(f"{b} -> {int_to_bin(b)}")
    print(f"{c} -> {int_to_bin(c)}")




5. Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
    
    *Пример:*
    
    - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 

21] [Негафибоначчи]
"""

________________________________
+++++++++++++++++++++++++++++
def lst_fibonacci_num():
    num = int(input('Введите любое натуральное число: '))
    fib = []
    a, b = 1, 1
    for i in range(num):
        fib.append(a)
        a, b = b, a + b
    a, b = 0, 1
    for j in range(num + 1):
        fib.insert(0, a)
        a, b = b, a - b
    print(f'Список чисел Фибоначчи для {num}: {fib}')


lst_fibonacci_num()

________________________
+++++++++++++++++++++++++++++
fib = int(input('5# введите число for fib = '))
res_5 = []
for i in range(fib+1):
    if i==0:
        res_5.append(i)
    elif i==1:
        res_5.append(i)
        res_5.insert(0, i)
    else:
        res_5.append(res_5[len(res_5)-1]+res_5[len(res_5)-2])
        res_5.insert(0, (-1)**(i-1)*res_5[len(res_5)-1])
print(res_5)











*Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
Пример:
для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] Негафибоначчи
"""

def fib(n: int) -> list:
    result = [0, 1]
    for i in range(2, n + 1):
        result.append(result[i - 2] + result[i - 1])
    return result


def neg_fib(lst: list) -> list:
    result = []
    for i in range(1, len(lst)):
        result.append(lst[i] * (-1) ** (i - 1))
    result = result[::-1]
    return result + lst


if __name__ == "__main__":
    print(f"{neg_fib(fib(8))}")


___________________________________
#5 Задайте число. Составьте список чисел Фибоначчи,
# в том числе для отрицательных индексов.

fib = int(input('5# введите число for fib = '))
res_5 = []
for i in range(fib+1):
    if i==0:
        res_5.append(i)
    elif i==1:
        res_5.append(i)
        res_5.insert(0, i)
    else:
        res_5.append(res_5[len(res_5)-1]+res_5[len(res_5)-2])
        res_5.insert(0, (-1)**(i-1)*res_5[len(res_5)-1])
print(res_5)
_______________________________________________________

def Fibo(n):
    if n < 0:
        if n % 2 != 0: 
            return Fibo(-n) 
        else:
            return -Fibo(-n)
    if n < 2: return n
    else: 
        return Fibo(n-2) + Fibo(n-1)

def ListFibo(k):
    arr = []
    for i in range(-k, k+1):
        arr.append(str(Fibo(i)))
    return arr

print(', '.join(ListFibo(8)))


________________________________________

print('Чтобы cоставить список чисел Фибоначчи, в том числе для отрицательных индексов введите число! ')
k = int(input('Введите число: '))

def fibonacciPos(n):
    a, b = 1, 1
    for i in range(n):
        yield a
        a, b = b, a + b

dataPos = list(fibonacciPos(k))
print(f'Для введенного вами числа {k} список чисел Фибоначи: {dataPos}')

def fibonacciNeg(n):
    a, b = 1, -1
    for i in range(n):
        yield a
        a, b = b, a - b

dataNeg = list(fibonacciNeg(k))
print(f'Для введенного вами числа {k} список чисел Негфибоначи: {dataNeg}')

dataRes = dataNeg + [0] + dataPos
print(f'Для введенного вами числа {k} список чисел Фибоначчи, в том числе для отрицательных индексов: {dataRes}')



_______________________________________
цена - 90мин - 1050руб - 700руб час - 900руб дают может - макс 3 грейд -  1300 час(1950 занятие)










