

–ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å —Å–µ–º–∏–Ω–∞—Ä 3


–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ø–æ –æ–¥–Ω–æ–º—É —Å–ª–æ–≤—É –∏–∑ –ø–µ—Ä–µ—á–Ω—è "–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞", "—è—â–µ—Ä–∏—Ü–∞" –∏–ª–∏ "–°–ø–æ–∫". –ù–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω –≤—ã–±–æ—Ä –¢–∏–º—É—Ä–∞, –Ω–∞ –≤—Ç–æ—Ä–æ–π ‚Äì –≤—ã–±–æ—Ä –†—É—Å–ª–∞–Ω–∞.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∂–µ—Ä–µ–±—å—ë–≤–∫–∏: –∫—Ç–æ –ø–æ–±–µ–¥–∏–ª - –¢–∏–º—É—Ä –∏–ª–∏ –†—É—Å–ª–∞–Ω, –∏–ª–∏ –æ–Ω–∏ —Å—ã–≥—Ä–∞–ª–∏ –≤–Ω–∏—á—å—é.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ: –Ω–æ–∂–Ω–∏—Ü—ã —Ä–µ–∂—É—Ç –±—É–º–∞–≥—É. –ë—É–º–∞–≥–∞ –∑–∞–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å. –ö–∞–º–µ–Ω—å –¥–∞–≤–∏—Ç —è—â–µ—Ä–∏—Ü—É, –∞ —è—â–µ—Ä–∏—Ü–∞ —Ç—Ä–∞–≤–∏—Ç –°–ø–æ–∫–∞, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –°–ø–æ–∫ –ª–æ–º–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ, –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å, –æ—Ç—Ä–µ–∑–∞—é—Ç –≥–æ–ª–æ–≤—É —è—â–µ—Ä–∏—Ü–µ, –∫–æ—Ç–æ—Ä–∞—è –µ—Å—Ç –±—É–º–∞–≥—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —É–ª–∏–∫–∏ –ø—Ä–æ—Ç–∏–≤ –°–ø–æ–∫–∞. –°–ø–æ–∫ –∏—Å–ø–∞—Ä—è–µ—Ç –∫–∞–º–µ–Ω—å, –∞ –∫–∞–º–µ–Ω—å, —Ä–∞–∑—É–º–µ–µ—Ç—Å—è, –∑–∞—Ç—É–ø–ª—è–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã.


a=input()
b=input()
m = {'–∫–∞–º–µ–Ω—å-–∫–∞–º–µ–Ω—å': '–Ω–∏—á—å—è', '–∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã': '–¢–∏–º—É—Ä', '–∫–∞–º–µ–Ω—å-–±—É–º–∞–≥–∞': '–†—É—Å–ª–∞–Ω',
        '–∫–∞–º–µ–Ω—å-—è—â–µ—Ä–∏—Ü–∞': '–¢–∏–º—É—Ä', '–∫–∞–º–µ–Ω—å-–°–ø–æ–∫': '–†—É—Å–ª–∞–Ω', '–Ω–æ–∂–Ω–∏—Ü—ã-–Ω–æ–∂–Ω–∏—Ü—ã': '–Ω–∏—á—å—è',
        '–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞': '–¢–∏–º—É—Ä', '–Ω–æ–∂–Ω–∏—Ü—ã-–∫–∞–º–µ–Ω—å': '–†—É—Å–ª–∞–Ω', '–Ω–æ–∂–Ω–∏—Ü—ã-—è—â–µ—Ä–∏—Ü–∞': '–¢–∏–º—É—Ä',
        '–Ω–æ–∂–Ω–∏—Ü—ã-–°–ø–æ–∫': '–†—É—Å–ª–∞–Ω', '–±—É–º–∞–≥–∞-–±—É–º–∞–≥–∞': '–Ω–∏—á—å—è', '–±—É–º–∞–≥–∞-–∫–∞–º–µ–Ω—å': '–¢–∏–º—É—Ä',
        '–±—É–º–∞–≥–∞-–Ω–æ–∂–Ω–∏—Ü—ã': '–†—É—Å–ª–∞–Ω', '–±—É–º–∞–≥–∞-—è—â–µ—Ä–∏—Ü–∞': '–†—É—Å–ª–∞–Ω', '–±—É–º–∞–≥–∞-–°–ø–æ–∫': '–†—É—Å–ª–∞–Ω',
        '—è—â–µ—Ä–∏—Ü–∞-—è—â–µ—Ä–∏—Ü–∞': '–Ω–∏—á—å—è', '—è—â–µ—Ä–∏—Ü–∞-–°–ø–æ–∫': '–¢–∏–º—É—Ä', '—è—â–µ—Ä–∏—Ü–∞-–Ω–æ–∂–Ω–∏—Ü—ã': '–†—É—Å–ª–∞–Ω',
        '—è—â–µ—Ä–∏—Ü–∞-–±—É–º–∞–≥–∞': '–¢–∏–º—É—Ä', '—è—â–µ—Ä–∏—Ü–∞-–∫–∞–º–µ–Ω—å': '–†—É—Å–ª–∞–Ω', '–°–ø–æ–∫-–°–ø–æ–∫': '–Ω–∏—á—å—è',
        '–°–ø–æ–∫-–Ω–æ–∂–Ω–∏—Ü—ã': '–¢–∏–º—É—Ä', '–°–ø–æ–∫-–±–∞–º–∞–≥–∞': '–†—É—Å–ª–∞–Ω', '–°–ø–æ–∫-–∫–∞–º–µ–Ω—å': '–¢–∏–º—É—Ä',
        '–°–ø–æ–∫-—è—â–µ—Ä–∏—Ü–∞': '–†—É—Å–ª–∞–Ω'}
s=a+'-'+b

print(m[s])


_____________________________________

–û—Ä–µ–ª –∏ —Ä–µ—à–∫–∞

–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –±—É–∫–≤ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ "–û" –∏ "–†". –ë—É–∫–≤–∞ "–û" ‚Äì —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã–ø–∞–¥–µ–Ω–∏—é –û—Ä–ª–∞, –∞ –±—É–∫–≤–∞ "–†" ‚Äì —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã–ø–∞–¥–µ–Ω–∏—é –†–µ—à–∫–∏. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä—è–¥ –≤—ã–ø–∞–≤—à–∏—Ö –†–µ—à–µ–∫.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –±—É–∫–≤ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ "–û" –∏ "–†".

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä—è–¥ –≤—ã–ø–∞–≤—à–∏—Ö –†–µ—à–µ–∫.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ï—Å–ª–∏ –≤—ã–ø–∞–≤—à–∏—Ö –†–µ—à–µ–∫ –Ω–µ—Ç, —Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ 
0
0.

–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
Sample Input 1:
–û–†–†–û–†–û–†–û–û–†–†–†–û
Sample Output 1:
3
Sample Input 2:
–û–û–û–û–û–û–†–†–†–û–†–û–†–†–†–†–†–†–†
Sample Output 2:
7
Sample Input 3:
–û–û–û–û–†–†–†–†–û–†–û–†–†–†–†–†–†–†–†–û–û–†–û–†–û–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†–†
Sample Output 3:
31


s=input()
t=0
while "–†"*(t+1) in s:
    t+=1
if t!=0:
    print(t)
else:
    print(0)



–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –ê–Ω—Ç–æ–Ω, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ì–∏–ª—Ñ–æ–π–ª–æ–º, –≤–∑–ª–æ–º–∞–ª —Å–µ—Ç—å —É–º–Ω—ã—Ö —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤. –¢–µ–ø–µ—Ä—å –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ "–ü–µ–≥–æ–≥–æ –¥—É–¥–æ—á–Ω–∏–∫–∞". –ü–æ–º–æ–≥–∏—Ç–µ –≤–ª–∞–¥–µ–ª—å—Ü—É —Ñ–∏—Ä–º—ã –æ—Ç—ã—Å–∫–∞—Ç—å –≤—Å–µ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–µ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏.

–î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Å—Ç—Ä–æ—á–Ω—ã—Ö –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –∏ –µ—Å–ª–∏ –≤ –Ω–µ–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–ª–æ–≤–æ "anton" (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä—è–¥–æ–º —Å—Ç–æ—è—â–∏–µ –±—É–∫–≤—ã, –≥–ª–∞–≤–Ω–æ–µ –Ω–∞–ª–∏—á–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±—É–∫–≤), —Ç–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –∑–∞—Ä–∞–∂–µ–Ω –∏ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞, –Ω—É–º–µ—Ä–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –µ–¥–∏–Ω–∏—Ü—ã

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—ë—Ç—Å—è —á–∏—Å–ª–æ 
n
n ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤. –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö 
n
n —Å—Ç—Ä–æ–∫–∞—Ö –≤–≤–æ–¥—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã, –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –æ—Ç 
5
5 –¥–æ 
100
100 —Å–∏–º–≤–æ–ª–æ–≤.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä–∞ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤ –Ω–µ—Ç, –Ω–∏—á–µ–≥–æ –≤—ã–≤–æ–¥–∏—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—ë—Ç—Å—è —á–∏—Å–ª–æ 
n
n ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤. –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö 
n
n —Å—Ç—Ä–æ–∫–∞—Ö –≤–≤–æ–¥—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã, –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –æ—Ç 
5
5 –¥–æ 
100
100 —Å–∏–º–≤–æ–ª–æ–≤.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä–∞ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–≤ –Ω–µ—Ç, –Ω–∏—á–µ–≥–æ –≤—ã–≤–æ–¥–∏—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.


Sample Input 1:
6
222anton456
a1n1t1o1n1
0000a0000n00t00000o000000n
gylfole
richard
ant0n
Sample Output 1:
1 2 3
Sample Input 2:
9
osfjwoiergwoignaewpjofwoeijfnwfonewfoignewtowenffnoeiwowjfninoiwfen
anton
aoooooooooontooooo
elelelelelelelelelel
ntoneeee
tonee
253235235a5323352n25235352t253523523235oo235523523523n
antoooooooooooooooooooooooooooooooooooooooooooooooooooon
unton
Sample Output 2:
1 2 7 8





n=int(input())
f=[]
hacker =  ['a', 'n', 't', 'o', 'n','']
count=0
otvet=[]
for i in range(n):
    u=input()
    f.append(u)
for i in range(len(f)): 
    hacker =  ['a', 'n', 't', 'o', 'n','']          
    for j in range(len(f[i])):         
        if f[i][j]==hacker[0]:
            hacker.pop(0)            
        if hacker==['']: 
            count=1+i        
        
            otvet.append(count)
          
            
            
            break

print(*otvet)

n = int(input())
list1 = []
for i in range(n):
    a = input()
    if 'a' in a:
        a = a[a.find('a'):]
        if 'n' in a:
            a = a[a.find('n'):]
            if 't' in a:
                a = a[a.find('t'):]
                if 'o' in a:
                    a = a[a.find('o'):]
                    if 'n' in a:
                        list1.append(i + 1)                   
print(*list1)











–°–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª, –∑–∞–ø–∏—Å–∞—Ç—å –≤ –Ω–µ–≥–æ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –û–∫–æ–Ω—á–∞–Ω–∏–µ–º –≤–≤–æ–¥–∞ –ø—É—Å—Ç—å —Å–ª—É–∂–∏—Ç –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞.



fname = input('–§–∞–π–ª: ')
f = open(fname,'w')
while True:
    s = input()
    if s == '': break
    f.write(s+'\n')
f.close()





–í —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–∞–π–ª–µ –ø–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, –∞ —Ç–∞–∫–∂–µ –¥–ª—è –∫–∞–∂–¥–æ–π –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–µ–π —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Å–ª–æ–≤.




f = open('text.txt')
line = 0
for i in f:
    line += 1
 
    flag = 0
    word = 0
    for j in i:
        if j != ' ' and flag == 0:
            word += 1
            flag = 1
        elif j == ' ':
            flag = 0
 
    print(i,len(i),'—Å–∏–º–≤.',word,'—Å–ª.')<br>
 <br>
print(line,'—Å—Ç—Ä.')<br>
f.close()<br>

__________________________________-

f = open('textfile.txt','r')countLines = 0countwordsInLines = []countCharsInLines = []for line in f:    countLines+=1    if line != '\n':        countwordsInLines.append(line.count(' ') + 1)    else:        countwordsInLines.append(0)    countCharsInLines.append(line.count('') -2)f.close()print(countLines)print(countwordsInLines)print(countCharsInLines)








–ù–∞ –≤—Ö–æ–¥–µ —Ñ—É–Ω–∫—Ü–∏—è to_set() –ø–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–ª–∏ —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª. –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –∏—Ö –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ. –ù–∞ –≤—ã—Ö–æ–¥–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏ –µ–≥–æ –º–æ—â–Ω–æ—Å—Ç—å(—á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤).

# –¢–µ—Å—Ç—ã
print(to_set('—è –æ–±—ã—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞'))
print(to_set([4, 5, 4, 6, 2, 9, 11, 3, 4, 2]))


def to_set(element):
    st = set(element)
    return st, len(st)

# –¢–µ—Å—Ç—ã
print(to_set('—è –æ–±—ã—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞'))
print(to_set([4, 5, 4, 6, 2, 9, 11, 3, 4, 2]))


–ò–≤–∞–Ω —Ä–µ—à–∏–ª —Å–æ–∑–¥–∞—Ç—å —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π —Å–ª–æ–≤–∞—Ä—å –≤ –º–∏—Ä–µ. –î–ª—è —ç—Ç–æ–≥–æ –æ–Ω –ø—Ä–∏–¥—É–º–∞–ª —Ñ—É–Ω–∫—Ü–∏—é biggest_dict(**kwargs), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ¬´–∫–ª—é—á: –∑–Ω–∞—á–µ–Ω–∏–µ¬ª –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∏–º —Å–ª–æ–≤–∞—Ä—å my_dict, —Å–æ—Å—Ç–æ—è—â–∏–π –≤—Å–µ–≥–æ –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ ¬´first_one¬ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º ¬´we can do it¬ª. –í–æ—Å—Å–æ–∑–¥–∞–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é. 
—Ç–µ—Å—Ç—ã

k1=22, k2=31, k3=11, k4=91
name='–ï–ª–µ–Ω–∞', age=31, weight=61, eyes_color='grey'



my_dict = {'first_one': 'we can do it'}


def biggest_dict(**kwargs):
    my_dict.update(**kwargs)


biggest_dict(k1=22, k2=31, k3=11, k4=91)
biggest_dict(name='–ï–ª–µ–Ω–∞', age=31, weight=61, eyes_color='grey')
print(my_dict)



–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é to_dict(lst), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∏ –∫–ª—é—á–æ–º –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –±—É–¥—É—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞–º –∑–∞–¥–∞–Ω–∏—è –∫–ª—é—á–µ–π –≤ —Å–ª–æ–≤–∞—Ä—è—Ö. 


def to_dict(lst):
    return {element: element for element in lst}

# –¢–µ—Å—Ç—ã
print(to_dict([1, 2, 3, 4]))
print(to_dict(['grey', (2, 17), 3.11, -4]))













–í–¢–û–†–ê–Ø –ß–ê–°–¢–¨ –°–ï–ú–ò–ù–ê–†–ê 3


# 19. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º –∑–∞–¥–∞–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Å–µ–≤–¥–æ—Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª- –º–µ—Ç–æ–¥ seed().

# —Ä–µ—à–µ–Ω–∏–µ –∑–¥–µ—Å—å https://www.stackfinder.ru/questions/28705965/python-random-function-without-using-random-module
import random
import time


def get_rand(x: int, y: int) -> int:
    
    scope = y - x    
    result = int(time.time()) % scope
    return result + x
   
print(get_rand(80, 100))



‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ
 


# 20. –ó–∞–¥–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç, –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ —Å—Ç—Ä–æ–∫ –Ω–µ–∫–æ–µ —á–∏—Å–ª–æ.
# –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å —á–∏—Å–ª–æ 3 –≤ –æ–¥–Ω–æ–π –∏–∑ —Å—Ç—Ä–æ–∫ —Å–ø–∏—Å–∫–∞

spisok = ["—Å–ª—É—á–∞–π–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ 1", "—Å–ª—É—á–∞–π–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ 2", "—Å–ª—É—á–∞–π–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ 3"]

print(any('3' in row for row in spisok))


____________________________________________________


strings = ["1", "another string", "string 3", "hello world", "123"]

num_to_search = input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –ø–æ–∏—Å–∫–∞: ")
found = False

for s in strings:
    if num_to_search in s:
        found = True
        break
if found:

    print("–ß–∏—Å–ª–æ –Ω–∞–π–¥–µ–Ω–æ")
else:
    print("–ß–∏—Å–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")









# 21. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –ø–æ–∑–∏—Ü–∏—é –≤—Ç–æ—Ä–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –≤ —Å–ø–∏—Å–∫–µ –ª–∏–±–æ —Å–æ–æ–±—â–∏—Ç, —á—Ç–æ –µ—ë –Ω–µ—Ç.
# –ø–æ—Ö–æ–∂–µ –Ω–∞ —ç—Ç—É –∑–∞–¥–∞—á—É https://pythontutor.ru/lessons/str/problems/second_occurence/


spisok = ['—Å—Ç—Ä–æ–∫–∞1', '—Å—Ç—Ä–æ–∫–∞2', '—Å—Ç—Ä–æ–∫–∞3', '—Å—Ç—Ä–æ–∫–∞1']
find_str = '—Å—Ç—Ä–æ–∫–∞1'
if spisok.count(find_str) < 2:
    print(f'–í—Ç–æ—Ä–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ {find_str} –Ω–µ—Ç –≤ –∑–∞–¥–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ')
else:
    spisok1 = spisok[spisok.index(find_str) + 1:] # –æ—Ç—Ä–µ–∑–∞–µ–º –ø–µ—Ä–≤–æ–π –≤—Ö–æ–∂–¥–µ–Ω–∏–µ
    print(spisok1.index(find_str) + (len(spisok) - len(spisok1))) # –∏—â–µ–º —Å—Ç—Ä–æ–∫—É –≤ –æ—Å—Ç–∞–≤—à–µ–º—Å—è —Å–ø–∏—Å–∫–µ –∏ –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç—Ä–µ–∑–∞–ª–∏  


"""
____________________________________________________________
–ü—Ä–∏–º–µ—Ä:
—Å–ø–∏—Å–æ–∫: ["qwe", "asd", "zxc", "qwe", "ertqwe"], –∏—â–µ–º: "qwe", –æ—Ç–≤–µ—Ç: 3
—Å–ø–∏—Å–æ–∫: ["–π—Ü—É", "—Ñ—ã–≤", "—è—á—Å", "—Ü—É–∫", "–π—Ü—É–∫–µ–Ω", "–π—Ü—É"], –∏—â–µ–º: "–π—Ü—É", –æ—Ç–≤–µ—Ç: 5
—Å–ø–∏—Å–æ–∫: ["–π—Ü—É", "—Ñ—ã–≤", "—è—á—Å", "—Ü—É–∫", "–π—Ü—É–∫–µ–Ω"], –∏—â–µ–º: "–π—Ü—É", –æ—Ç–≤–µ—Ç: -1
—Å–ø–∏—Å–æ–∫: ["123", "234", 123, "567"], –∏—â–µ–º: "123", –æ—Ç–≤–µ—Ç: -1
—Å–ø–∏—Å–æ–∫: [], –∏—â–µ–º: "123", –æ—Ç–≤–µ—Ç: -1
"""

def find_index(lst, s):
    counter = 0
    for i, x in enumerate(lst):
        if s == x:
            counter += 1
            if counter == 2:
                return i
    return -1


lst_01 = ["qwe", "asd", "zxc", "qwe", "ertqwe"]
lst_03 = ["–π—Ü—É", "—Ñ—ã–≤", "—è—á—Å", "—Ü—É–∫", "–π—Ü—É–∫–µ–Ω"]

s = input()

result = find_index(lst_03, s)
print(result)



b = ["qwe", "asd", "zxc", "qwe", "ertqwe"]count = 0for i in range(len(b)):    if b[0] == b[i]:        count += 1        if count == 2:            print(i+1)            break


from telegram import Update, Bot
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
from credits import bot_token

bot = Bot(token=bot_token)
updater = Updater(token=bot_token, use_context=True)
dispatcher = updater.dispatcher


def start(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="Hello!")


def info(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="My name is Bot! I work at Kodland!")


def message(update, context):
    if update.message.text == "Bot":
        context.bot.send_message(chat_id=update.effective_chat.id, text="I know this word - it's me!")
    else:
        context.bot.send_message(chat_id=update.effective_chat.id, text="I don't quite understand you yet, but I will soon")


def unknown(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="I don't understand this command - please check it!")


start_handler = CommandHandler('start', start)
info_handler = CommandHandler('info', info)
message_handler = MessageHandler(Filters.text, message)
unknown_handler = MessageHandler(Filters.command, unknown)

dispatcher.add_handler(start_handler)
dispatcher.add_handler(info_handler)
dispatcher.add_handler(message_handler)
dispatcher.add_handler(unknown_handler)

updater.start_polling()
updater.idle()





















